// Generated by CoffeeScript 1.7.1
(function() {
  var comment_height, delite_clip_fn, height_square, icon_square, serch_toggle;
  comment_height = function() {
    var cmnt_inr, fn, get_height, i, p, v, _i, _len, _results;
    cmnt_inr = Array.prototype.slice.call(document.querySelectorAll(".bass_maincontents_01 .bass_news_01 .comment .inner"));
    if (!cmnt_inr.length) {
      return;
    }
    get_height = function(el) {
      var h, style;
      style = window.getComputedStyle(v, null);
      return h = style.getPropertyValue("height").split("px")[0] * 1 - style.getPropertyValue("padding-top").split("px")[0] * 1 - style.getPropertyValue("padding-bottom").split("px")[0] * 1 - style.getPropertyValue("border-top-width").split("px")[0] * 1 - style.getPropertyValue("border-bottom-width").split("px")[0] * 1;
    };
    fn = function(el) {
      var p, that;
      that = this;
      p = that.querySelector(".open");
      if (that.classList.contains("on")) {
        that.classList.remove("on");
        return p.innerHTML = "<span>▲閉じる<span>";
      } else {
        that.classList.add("on");
        return p.innerHTML = "...<span>▼もっと見る<span>";
      }
    };
    _results = [];
    for (i = _i = 0, _len = cmnt_inr.length; _i < _len; i = ++_i) {
      v = cmnt_inr[i];
      if (get_height(v) > 80) {
        p = document.createElement("p");
        p.classList.add("open");
        p.innerHTML = "...<span>▼もっと見る<span>";
        v.appendChild(p);
        v.classList.add("on");
        _results.push(v.addEventListener("click", fn, false));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };
  delite_clip_fn = function(wrap, btn) {
    var addClass, b, hasClass, mode, pop_close, removeClass, timer, w;
    hasClass = function(el, className) {
      if (el.classList) {
        return el.classList.contains(className);
      } else {
        return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
      }
    };
    addClass = function(el, className) {
      if (el.classList) {
        return el.classList.add(className);
      } else {
        return el.className += ' ' + className;
      }
    };
    removeClass = function(el, className) {
      if (el.classList) {
        return el.classList.remove(className);
      } else {
        return el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
      }
    };
    w = document.querySelector(wrap);
    if (!w) {
      return;
    }
    b = Array.prototype.slice.call(w.querySelectorAll(btn));
    timer = null;
    mode = false;
    pop_close = function(el) {
      var mc, md, mode_del, move_cnt, mu, rm_del_mode;
      move_cnt = 0;
      mode_del = function() {
        move_cnt = 0;
        clearInterval(timer);
        return addClass(w, "del_mode");
      };
      md = function() {
        return timer = setInterval(function() {
          return mode_del();
        }, 750);
      };
      mu = function() {
        move_cnt = 0;
        return clearInterval(timer);
      };
      rm_del_mode = function() {
        move_cnt = 0;
        if (hasClass(w, "del_mode")) {
          return removeClass(w, "del_mode");
        }
      };
      mc = function(elm) {
        var msg;
        msg = (elm.querySelector(".name")).innerHTML ? (elm.querySelector(".name")).innerHTML + "を削除しますか？" : 'クリップを削除しますか？';
        if (hasClass(w, "del_mode")) {
          if (window.confirm(msg)) {
            if (hasClass(w, "del_mode")) {
              return window.location.href = (elm.querySelector(".delete_btn")).getAttribute("href");
            }
          } else {

          }
        }
      };
      w.addEventListener("click", function(e) {
        e.stopPropagation();
        return rm_del_mode();
      }, false);
      document.querySelector("body").addEventListener("click", function(e) {
        e.stopPropagation();
        return rm_del_mode();
      }, false);
      document.querySelector("html").addEventListener("click", function(e) {
        e.stopPropagation();
        return rm_del_mode();
      }, false);
      el.addEventListener("mousedown", function(e) {
        e.stopPropagation();
        return md();
      }, false);
      el.addEventListener("mouseup", function(e) {
        e.stopPropagation();
        return mu();
      }, false);
      el.addEventListener("mousemove", function(e) {
        e.stopPropagation();
        ++move_cnt;
        if (move_cnt > 2) {
          return mu();
        }
      }, false);
      return el.addEventListener("click", function(e) {
        e.stopPropagation();
        return mc(el);
      }, false);
    };
    return b.map(function(v) {
      return pop_close(v);
    });
  };
  icon_square = function(el, px_size) {
    var d, i, v, _results;
    d = Array.prototype.slice.call(document.querySelectorAll(el));
    if (!d.length) {
      return;
    }
    _results = [];
    for (i in d) {
      v = d[i];
      v.style.width = "auto";
      v.style.height = "auto";
      if (v.offsetWidth - v.offsetHeight < 0) {
        v.style.width = px_size + "px";
        v.style.height = "auto";
        _results.push(v.style.top = -(v.offsetHeight - px_size) / 2 + "px");
      } else if (v.offsetWidth - v.offsetHeight > 0) {
        v.style.height = px_size + "px";
        v.style.width = "auto";
        _results.push(v.style.left = -(v.offsetWidth - px_size) / 2 + "px");
      } else {
        v.style.width = px_size + "px";
        _results.push(v.style.height = px_size + "px");
      }
    }
    return _results;
  };
  serch_toggle = function(cls, wrap, btn, toggle) {
    var addClass, b, hasClass, removeClass, w;
    hasClass = function(el, className) {
      if (el.classList) {
        return el.classList.contains(className);
      } else {
        return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
      }
    };
    addClass = function(el, className) {
      if (el.classList) {
        return el.classList.add(className);
      } else {
        return el.className += ' ' + className;
      }
    };
    removeClass = function(el, className) {
      if (el.classList) {
        return el.classList.remove(className);
      } else {
        return el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
      }
    };
    w = document.querySelector(wrap);
    if (!w) {
      return;
    }
    b = document.querySelector(btn);
    toggle = function() {
      if (hasClass(w, cls)) {
        removeClass(w, cls);
        return b.innerHTML = "▼さらに細かく";
      } else {
        addClass(w, cls);
        return b.innerHTML = "▲閉じる";
      }
    };
    if (b && w) {
      return b.addEventListener("click", toggle, false);
    }
  };
  height_square = function(el) {
    var d, i, v;
    d = Array.prototype.slice.call(document.querySelectorAll(el));
    if (!d.length) {
      return;
    }
    for (i in d) {
      v = d[i];
      if (window.innerWidth > 750) {
        if (v.hasChildNodes()) {
          v.style.height = v.offsetWidth + "px";
        }
      } else {
        v.style.height = "auto";
      }
    }
  };
  window.bass_pop_01 = function() {
    var bg, btn, fadeIn, fadeOut, inner;
    fadeIn = function(el, dur) {
      var last, tick;
      el.style.opacity = 0;
      if (!dur) {
        dur = 400;
      }
      last = +new Date();
      tick = function() {
        el.style.display = 'block';
        el.style.opacity = +el.style.opacity + (new Date() - last) / dur;
        last = +new Date();
        if (+el.style.opacity < 1) {
          (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
        }
      };
      tick();
    };
    fadeOut = function(el, dur) {
      var last, tick;
      el.style.opacity = 0;
      if (!dur) {
        dur = 400;
      }
      last = +new Date();
      el.style.opacity = 1;
      tick = function() {
        el.style.display = 'block';
        el.style.opacity = +el.style.opacity - (new Date() - last) / dur;
        last = +new Date();
        if (el.style.opacity > 0) {
          (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
        } else {
          el.style.display = 'none';
        }
      };
      tick();
    };
    bg = document.querySelector(".bass_pop_01");
    if (!bg) {
      return;
    }
    bg.style.height = screen.height > window.outerHeight ? screen.height + "px" : window.outerHeight + "px";
    fadeIn(bg);
    btn = bg.querySelector(".pop_inner .close");
    inner = bg.querySelector(".pop_inner");
    btn.addEventListener("click", function() {
      return fadeOut(bg);
    });
    bg.addEventListener("click", function() {
      return fadeOut(bg);
    });
    return inner.addEventListener("click", function(e) {
      return e.stopPropagation();
    });
  };
  document.addEventListener("DOMContentLoaded", function() {
    comment_height();
    height_square('.bass_maincontents_01 .bass_seccard_01 .inner');
    serch_toggle("opened", ".search_wrap", ".serch_toggle", ".serch_area");
    delite_clip_fn(".bass_maincontents_01.del_mode_wrap", ".bass_maincontents_01 .bass_seccard_01");
  }, false);
  window.addEventListener('load', function(e) {
    icon_square(".twocol div.icon img", 60);
    icon_square(".bass_detail_01 .detail_comment .person .photo img", 100);
    icon_square(".bass_news_01 .person .photo img", 80);
  }, false);
  window.resize_fn = new Object();
  window.resize_fn["main"] = function() {
    return height_square('.bass_maincontents_01 .bass_seccard_01 .inner');
  };
  return window.addEventListener('resize', function(e) {
    var timer;
    timer = null;
    clearInterval(timer);
    return timer = setInterval(function() {
      var i, v, _ref;
      _ref = window.resize_fn;
      for (i in _ref) {
        v = _ref[i];
        v();
      }
      return clearInterval(timer);
    }, 30);
  }, false);
})();
