// Generated by CoffeeScript 1.7.1
var _main;

(function() {
  var console, length, method, methods, noop;
  method = void 0;
  noop = function() {};
  methods = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "exception", "group", "groupCollapsed", "groupEnd", "info", "log", "markTimeline", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"];
  length = methods.length;
  console = (window.console = window.console || {});
  while (length--) {
    method = methods[length];
    if (!console[method]) {
      console[method] = noop;
    }
  }
})();

_main = (function() {
  function _main() {}

  _main.prototype.addEvent = function(element, event, fn) {
    if (element.addEventListener) {
      element.addEventListener(event, fn, false);
    } else {
      if (element.attachEvent) {
        element.attachEvent("on" + event, fn);
      }
    }
  };

  _main.prototype.s = function(selector) {
    return document.querySelector(selector);
  };

  _main.prototype.sa = function(selector) {
    return document.querySelectorAll(selector);
  };

  _main.prototype.t = function(tagname) {
    return document.getElementsByTagName(tagname);
  };

  _main.prototype.c = function(cl) {
    return document.getElementsByClassName(cl);
  };

  _main.prototype.i = function(idname) {
    return document.getElementById(idname);
  };

  _main.prototype.addClass = function(el, className) {
    if (el.classList) {
      return el.classList.add(className);
    } else {
      return el.className += ' ' + className;
    }
  };

  _main.prototype.removeClass = function(el, className) {
    if (el.classList) {
      return el.classList.remove(className);
    } else {
      return el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    }
  };

  _main.prototype.fadeIn = function(el, dur) {
    var last, tick;
    el.style.opacity = 0;
    if (!dur) {
      dur = 400;
    }
    last = +new Date();
    tick = function() {
      el.style.display = '';
      el.style.opacity = +el.style.opacity + (new Date() - last) / dur;
      last = +new Date();
      if (+el.style.opacity < 1) {
        (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
      }
    };
    tick();
  };

  _main.prototype.fadeOut = function(el, dur) {
    var last, tick;
    el.style.opacity = 0;
    if (!dur) {
      dur = 400;
    }
    last = +new Date();
    el.style.opacity = 1;
    tick = function() {
      el.style.display = '';
      el.style.opacity = +el.style.opacity - (new Date() - last) / dur;
      last = +new Date();
      if (el.style.opacity > 0) {
        (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);
      } else {
        el.style.display = 'none';
      }
    };
    tick();
  };

  _main.prototype.ajax = function(url, xml, fn_suc, fn_err) {
    var request;
    request = new XMLHttpRequest();
    request.open("GET", url, true);
    request.onload = function() {
      var resp;
      if (request.status >= 200 && request.status < 400) {
        if (!(xml === "text")) {
          resp = request.responseXML;
        } else {
          resp = request.responseText;
        }
        return fn_suc(resp);
      } else {
        return fn_err(resp);
      }
    };
    request.onerror = function() {
      fn_err(resp);
    };
    request.send();
  };

  return _main;

})();
